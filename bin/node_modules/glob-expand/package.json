{
  "name": "glob-expand",
  "description": "A sync glob / minimatch / RegExp call with a gruntjs -like `expand` of patterns, with minimum depepndencies. Derived from gruntjs's v0.4.1 `file.expand`",
  "version": "0.0.2",
  "homepage": "https://github.com/anodynos/node-glob-expand",
  "author": {
    "name": "Agelos Pikoulas",
    "email": "agelos.pikoulas@gmail.com"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "keywords": [
    "minimatch",
    "glob",
    "node-glob",
    "gruntjs",
    "grunt",
    "expand",
    "filematch",
    "wildcards",
    "patterns"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/anodynos/node-glob-expand"
  },
  "bugs": {
    "url": ""
  },
  "main": "./build/code/expand.js",
  "test": "mocha build/spec --recursive --bail --reporter spec",
  "directories": {
    "doc": "./doc",
    "dist": "./build"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "glob": "~3.1.21",
    "lodash": "1.2.x"
  },
  "devDependencies": {
    "chai": "*",
    "grunt": "0.4.1",
    "grunt-contrib-concat": "0.3.0",
    "grunt-contrib-clean": "0.4.1",
    "grunt-shell": "0.2.2"
  },
  "readme": "# glob-expand\n\nA (sync) glob / minimatch / RegExp call using [gruntjs](https://github.com/gruntjs/grunt)'s `file.expand`.\n\nIt has only a minimum of dependencies (glob & lodash).\n\nIts almost a copy/paste of 2 functions from Gruntjs's v0.4.1 [grunt/file.js](https://github.com/gruntjs/grunt/blob/master/lib/grunt/file.js)\n\nAdditionally you can use [minimatch](http://github.com/isaacs/minimatch/) `String`s or `RegExp`s, either as an Array or as arguments.\n*\n\n## Install:\n\n`npm install glob-expand`\n\n## Examples:\n```coffeescript\n\texpand = require 'glob-expand'\n\n\t# may the original node-glob be with you (should you need it):\n\tglob = expand.glob\n\n\texpand {filter: 'isFile', cwd: '../'}, ['**/*.*', '!exclude/these/**/*.*']\n\t# returns all files in cwd ['file1', 'file2',...] but excluding\n\t# those under directory 'exclude/these'\n\n\t# These are the same\n\texpand {cwd: '../..'}, ['**/*.*', '!node_modules/**/*.*']\n\texpand {cwd: '../..'}, '**/*.*', '!node_modules/**/*.*'\n\n\t# These are the same too:\n\texpand {}, ['**/*.*', '!**/*.js']\n\texpand {}, '**/*.*', '!**/*.js'\n\texpand ['**/*.*', '!**/*.js']\n\texpand '**/*.*', '!**/*.js'\n\n\t# Using Regular Expressions:\n\texpand '**/*.js', /.*\\.(coffee\\.md|litcoffee|coffee)$/i, '!DRAFT*.*'\n\t# -> returns all `.js`, `.coffee`, `.coffee.md` & `.litcoffee` files,\n\t#    excluding those starting with 'DRAFT'\n\n```\n\nSee [gruntjs files configuration](http://gruntjs.com/configuring-tasks#files)\nand [node-glob](https://github.com/isaacs/node-glob) for more options.\n\nSorry no tests, I assumed gruntjs's tests are sufficient ;-)",
  "_id": "glob-expand@0.0.2",
  "dist": {
    "shasum": "00b11cb522f808c4d0364a5617e1b9f80488e5e8",
    "tarball": "http://registry.npmjs.org/glob-expand/-/glob-expand-0.0.2.tgz"
  },
  "_npmVersion": "1.1.63",
  "_npmUser": {
    "name": "anodynos",
    "email": "agelos.pikoulas@gmail.com"
  },
  "maintainers": [
    {
      "name": "anodynos",
      "email": "agelos.pikoulas@gmail.com"
    }
  ],
  "_shasum": "00b11cb522f808c4d0364a5617e1b9f80488e5e8",
  "_resolved": "https://registry.npmjs.org/glob-expand/-/glob-expand-0.0.2.tgz",
  "_from": "glob-expand@0.0.2"
}
